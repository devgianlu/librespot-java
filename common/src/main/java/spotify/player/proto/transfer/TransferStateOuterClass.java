// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transfer_state.proto

package spotify.player.proto.transfer;

public final class TransferStateOuterClass {
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_spotify_player_proto_transfer_TransferState_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_spotify_player_proto_transfer_TransferState_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\024transfer_state.proto\022\035spotify.player.p" +
                        "roto.transfer\032\034context_player_options.pr" +
                        "oto\032\016playback.proto\032\rsession.proto\032\013queu" +
                        "e.proto\"\231\002\n\rTransferState\022;\n\007options\030\001 \001" +
                        "(\0132*.spotify.player.proto.ContextPlayerO" +
                        "ptions\0229\n\010playback\030\002 \001(\0132\'.spotify.playe" +
                        "r.proto.transfer.Playback\022?\n\017current_ses" +
                        "sion\030\003 \001(\0132&.spotify.player.proto.transf" +
                        "er.Session\0223\n\005queue\030\004 \001(\0132$.spotify.play" +
                        "er.proto.transfer.Queue\022\032\n\022creation_time" +
                        "stamp\030\005 \001(\003B\002H\002"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                                spotify.player.proto.ContextPlayerOptionsOuterClass.getDescriptor(),
                                spotify.player.proto.transfer.PlaybackOuterClass.getDescriptor(),
                                spotify.player.proto.transfer.SessionOuterClass.getDescriptor(),
                                spotify.player.proto.transfer.QueueOuterClass.getDescriptor(),
                        }, assigner);
        internal_static_spotify_player_proto_transfer_TransferState_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_spotify_player_proto_transfer_TransferState_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_spotify_player_proto_transfer_TransferState_descriptor,
                new java.lang.String[]{"Options", "Playback", "CurrentSession", "Queue", "CreationTimestamp",});
        spotify.player.proto.ContextPlayerOptionsOuterClass.getDescriptor();
        spotify.player.proto.transfer.PlaybackOuterClass.getDescriptor();
        spotify.player.proto.transfer.SessionOuterClass.getDescriptor();
        spotify.player.proto.transfer.QueueOuterClass.getDescriptor();
    }

    private TransferStateOuterClass() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    public interface TransferStateOrBuilder extends
            // @@protoc_insertion_point(interface_extends:spotify.player.proto.transfer.TransferState)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
         */
        boolean hasOptions();

        /**
         * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
         */
        spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions getOptions();

        /**
         * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
         */
        spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptionsOrBuilder getOptionsOrBuilder();

        /**
         * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
         */
        boolean hasPlayback();

        /**
         * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
         */
        spotify.player.proto.transfer.PlaybackOuterClass.Playback getPlayback();

        /**
         * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
         */
        spotify.player.proto.transfer.PlaybackOuterClass.PlaybackOrBuilder getPlaybackOrBuilder();

        /**
         * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
         */
        boolean hasCurrentSession();

        /**
         * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
         */
        spotify.player.proto.transfer.SessionOuterClass.Session getCurrentSession();

        /**
         * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
         */
        spotify.player.proto.transfer.SessionOuterClass.SessionOrBuilder getCurrentSessionOrBuilder();

        /**
         * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
         */
        boolean hasQueue();

        /**
         * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
         */
        spotify.player.proto.transfer.QueueOuterClass.Queue getQueue();

        /**
         * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
         */
        spotify.player.proto.transfer.QueueOuterClass.QueueOrBuilder getQueueOrBuilder();

        /**
         * <code>optional int64 creation_timestamp = 5;</code>
         */
        boolean hasCreationTimestamp();

        /**
         * <code>optional int64 creation_timestamp = 5;</code>
         */
        long getCreationTimestamp();
    }

    /**
     * Protobuf type {@code spotify.player.proto.transfer.TransferState}
     */
    public static final class TransferState extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:spotify.player.proto.transfer.TransferState)
            TransferStateOrBuilder {
        public static final int OPTIONS_FIELD_NUMBER = 1;
        public static final int PLAYBACK_FIELD_NUMBER = 2;
        public static final int CURRENT_SESSION_FIELD_NUMBER = 3;
        public static final int QUEUE_FIELD_NUMBER = 4;
        public static final int CREATION_TIMESTAMP_FIELD_NUMBER = 5;
        private static final long serialVersionUID = 0L;
        // @@protoc_insertion_point(class_scope:spotify.player.proto.transfer.TransferState)
        private static final spotify.player.proto.transfer.TransferStateOuterClass.TransferState DEFAULT_INSTANCE;
        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<TransferState>
                PARSER = new com.google.protobuf.AbstractParser<TransferState>() {
            @java.lang.Override
            public TransferState parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                Builder builder = newBuilder();
                try {
                    builder.mergeFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(builder.buildPartial());
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(
                            e.getMessage()).setUnfinishedMessage(
                            builder.buildPartial());
                }
                return builder.buildPartial();
            }
        };

        static {
            DEFAULT_INSTANCE = new spotify.player.proto.transfer.TransferStateOuterClass.TransferState();
        }

        private int bitField0_;
        private spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions options_;
        private spotify.player.proto.transfer.PlaybackOuterClass.Playback playback_;
        private spotify.player.proto.transfer.SessionOuterClass.Session currentSession_;
        private spotify.player.proto.transfer.QueueOuterClass.Queue queue_;
        private long creationTimestamp_;

        // Use TransferState.newBuilder() to construct.
        private TransferState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private TransferState() {
            creationTimestamp_ = 0L;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return spotify.player.proto.transfer.TransferStateOuterClass.internal_static_spotify_player_proto_transfer_TransferState_descriptor;
        }

        public static spotify.player.proto.transfer.TransferStateOuterClass.TransferState parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static spotify.player.proto.transfer.TransferStateOuterClass.TransferState parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static spotify.player.proto.transfer.TransferStateOuterClass.TransferState parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static spotify.player.proto.transfer.TransferStateOuterClass.TransferState parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static spotify.player.proto.transfer.TransferStateOuterClass.TransferState parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static spotify.player.proto.transfer.TransferStateOuterClass.TransferState parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static spotify.player.proto.transfer.TransferStateOuterClass.TransferState parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static spotify.player.proto.transfer.TransferStateOuterClass.TransferState parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static spotify.player.proto.transfer.TransferStateOuterClass.TransferState parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static spotify.player.proto.transfer.TransferStateOuterClass.TransferState parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static spotify.player.proto.transfer.TransferStateOuterClass.TransferState parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static spotify.player.proto.transfer.TransferStateOuterClass.TransferState parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(spotify.player.proto.transfer.TransferStateOuterClass.TransferState prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        public static spotify.player.proto.transfer.TransferStateOuterClass.TransferState getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static com.google.protobuf.Parser<TransferState> parser() {
            return PARSER;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return spotify.player.proto.transfer.TransferStateOuterClass.internal_static_spotify_player_proto_transfer_TransferState_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            spotify.player.proto.transfer.TransferStateOuterClass.TransferState.class, spotify.player.proto.transfer.TransferStateOuterClass.TransferState.Builder.class);
        }

        /**
         * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
         */
        public boolean hasOptions() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
         */
        public spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions getOptions() {
            return options_ == null ? spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions.getDefaultInstance() : options_;
        }

        /**
         * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
         */
        public spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptionsOrBuilder getOptionsOrBuilder() {
            return options_ == null ? spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions.getDefaultInstance() : options_;
        }

        /**
         * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
         */
        public boolean hasPlayback() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
         */
        public spotify.player.proto.transfer.PlaybackOuterClass.Playback getPlayback() {
            return playback_ == null ? spotify.player.proto.transfer.PlaybackOuterClass.Playback.getDefaultInstance() : playback_;
        }

        /**
         * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
         */
        public spotify.player.proto.transfer.PlaybackOuterClass.PlaybackOrBuilder getPlaybackOrBuilder() {
            return playback_ == null ? spotify.player.proto.transfer.PlaybackOuterClass.Playback.getDefaultInstance() : playback_;
        }

        /**
         * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
         */
        public boolean hasCurrentSession() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
         */
        public spotify.player.proto.transfer.SessionOuterClass.Session getCurrentSession() {
            return currentSession_ == null ? spotify.player.proto.transfer.SessionOuterClass.Session.getDefaultInstance() : currentSession_;
        }

        /**
         * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
         */
        public spotify.player.proto.transfer.SessionOuterClass.SessionOrBuilder getCurrentSessionOrBuilder() {
            return currentSession_ == null ? spotify.player.proto.transfer.SessionOuterClass.Session.getDefaultInstance() : currentSession_;
        }

        /**
         * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
         */
        public boolean hasQueue() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
         */
        public spotify.player.proto.transfer.QueueOuterClass.Queue getQueue() {
            return queue_ == null ? spotify.player.proto.transfer.QueueOuterClass.Queue.getDefaultInstance() : queue_;
        }

        /**
         * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
         */
        public spotify.player.proto.transfer.QueueOuterClass.QueueOrBuilder getQueueOrBuilder() {
            return queue_ == null ? spotify.player.proto.transfer.QueueOuterClass.Queue.getDefaultInstance() : queue_;
        }

        /**
         * <code>optional int64 creation_timestamp = 5;</code>
         */
        public boolean hasCreationTimestamp() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional int64 creation_timestamp = 5;</code>
         */
        public long getCreationTimestamp() {
            return creationTimestamp_;
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<TransferState> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public spotify.player.proto.transfer.TransferStateOuterClass.TransferState getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        /**
         * Protobuf type {@code spotify.player.proto.transfer.TransferState}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:spotify.player.proto.transfer.TransferState)
                spotify.player.proto.transfer.TransferStateOuterClass.TransferStateOrBuilder {
            private int bitField0_;
            private spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions options_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions, spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions.Builder, spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptionsOrBuilder> optionsBuilder_;
            private spotify.player.proto.transfer.PlaybackOuterClass.Playback playback_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    spotify.player.proto.transfer.PlaybackOuterClass.Playback, spotify.player.proto.transfer.PlaybackOuterClass.Playback.Builder, spotify.player.proto.transfer.PlaybackOuterClass.PlaybackOrBuilder> playbackBuilder_;
            private spotify.player.proto.transfer.SessionOuterClass.Session currentSession_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    spotify.player.proto.transfer.SessionOuterClass.Session, spotify.player.proto.transfer.SessionOuterClass.Session.Builder, spotify.player.proto.transfer.SessionOuterClass.SessionOrBuilder> currentSessionBuilder_;
            private spotify.player.proto.transfer.QueueOuterClass.Queue queue_ = null;
            private com.google.protobuf.SingleFieldBuilderV3<
                    spotify.player.proto.transfer.QueueOuterClass.Queue, spotify.player.proto.transfer.QueueOuterClass.Queue.Builder, spotify.player.proto.transfer.QueueOuterClass.QueueOrBuilder> queueBuilder_;
            private long creationTimestamp_;

            // Construct using spotify.player.proto.transfer.TransferStateOuterClass.TransferState.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return spotify.player.proto.transfer.TransferStateOuterClass.internal_static_spotify_player_proto_transfer_TransferState_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return spotify.player.proto.transfer.TransferStateOuterClass.internal_static_spotify_player_proto_transfer_TransferState_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                spotify.player.proto.transfer.TransferStateOuterClass.TransferState.class, spotify.player.proto.transfer.TransferStateOuterClass.TransferState.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getOptionsFieldBuilder();
                    getPlaybackFieldBuilder();
                    getCurrentSessionFieldBuilder();
                    getQueueFieldBuilder();
                }
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                if (optionsBuilder_ == null) {
                    options_ = null;
                } else {
                    optionsBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                if (playbackBuilder_ == null) {
                    playback_ = null;
                } else {
                    playbackBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                if (currentSessionBuilder_ == null) {
                    currentSession_ = null;
                } else {
                    currentSessionBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                if (queueBuilder_ == null) {
                    queue_ = null;
                } else {
                    queueBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                creationTimestamp_ = 0L;
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return spotify.player.proto.transfer.TransferStateOuterClass.internal_static_spotify_player_proto_transfer_TransferState_descriptor;
            }

            @java.lang.Override
            public spotify.player.proto.transfer.TransferStateOuterClass.TransferState getDefaultInstanceForType() {
                return spotify.player.proto.transfer.TransferStateOuterClass.TransferState.getDefaultInstance();
            }

            @java.lang.Override
            public spotify.player.proto.transfer.TransferStateOuterClass.TransferState build() {
                spotify.player.proto.transfer.TransferStateOuterClass.TransferState result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public spotify.player.proto.transfer.TransferStateOuterClass.TransferState buildPartial() {
                spotify.player.proto.transfer.TransferStateOuterClass.TransferState result = new spotify.player.proto.transfer.TransferStateOuterClass.TransferState(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                if (optionsBuilder_ == null) {
                    result.options_ = options_;
                } else {
                    result.options_ = optionsBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                if (playbackBuilder_ == null) {
                    result.playback_ = playback_;
                } else {
                    result.playback_ = playbackBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                if (currentSessionBuilder_ == null) {
                    result.currentSession_ = currentSession_;
                } else {
                    result.currentSession_ = currentSessionBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                if (queueBuilder_ == null) {
                    result.queue_ = queue_;
                } else {
                    result.queue_ = queueBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.creationTimestamp_ = creationTimestamp_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {
                return super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.addRepeatedField(field, value);
            }

            /**
             * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
             */
            public boolean hasOptions() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
             */
            public spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions getOptions() {
                if (optionsBuilder_ == null) {
                    return options_ == null ? spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions.getDefaultInstance() : options_;
                } else {
                    return optionsBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
             */
            public Builder setOptions(spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions value) {
                if (optionsBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    options_ = value;
                    onChanged();
                } else {
                    optionsBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
             */
            public Builder setOptions(
                    spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions.Builder builderForValue) {
                if (optionsBuilder_ == null) {
                    options_ = builderForValue.build();
                    onChanged();
                } else {
                    optionsBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
             */
            public Builder mergeOptions(spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions value) {
                if (optionsBuilder_ == null) {
                    if (((bitField0_ & 0x00000001) == 0x00000001) &&
                            options_ != null &&
                            options_ != spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions.getDefaultInstance()) {
                        options_ =
                                spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions.newBuilder(options_).mergeFrom(value).buildPartial();
                    } else {
                        options_ = value;
                    }
                    onChanged();
                } else {
                    optionsBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000001;
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
             */
            public Builder clearOptions() {
                if (optionsBuilder_ == null) {
                    options_ = null;
                    onChanged();
                } else {
                    optionsBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000001);
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
             */
            public spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions.Builder getOptionsBuilder() {
                bitField0_ |= 0x00000001;
                onChanged();
                return getOptionsFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
             */
            public spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptionsOrBuilder getOptionsOrBuilder() {
                if (optionsBuilder_ != null) {
                    return optionsBuilder_.getMessageOrBuilder();
                } else {
                    return options_ == null ?
                            spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions.getDefaultInstance() : options_;
                }
            }

            /**
             * <code>optional .spotify.player.proto.ContextPlayerOptions options = 1;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions, spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions.Builder, spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptionsOrBuilder>
            getOptionsFieldBuilder() {
                if (optionsBuilder_ == null) {
                    optionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions, spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptions.Builder, spotify.player.proto.ContextPlayerOptionsOuterClass.ContextPlayerOptionsOrBuilder>(
                            getOptions(),
                            getParentForChildren(),
                            isClean());
                    options_ = null;
                }
                return optionsBuilder_;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
             */
            public boolean hasPlayback() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
             */
            public spotify.player.proto.transfer.PlaybackOuterClass.Playback getPlayback() {
                if (playbackBuilder_ == null) {
                    return playback_ == null ? spotify.player.proto.transfer.PlaybackOuterClass.Playback.getDefaultInstance() : playback_;
                } else {
                    return playbackBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
             */
            public Builder setPlayback(spotify.player.proto.transfer.PlaybackOuterClass.Playback value) {
                if (playbackBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    playback_ = value;
                    onChanged();
                } else {
                    playbackBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
             */
            public Builder setPlayback(
                    spotify.player.proto.transfer.PlaybackOuterClass.Playback.Builder builderForValue) {
                if (playbackBuilder_ == null) {
                    playback_ = builderForValue.build();
                    onChanged();
                } else {
                    playbackBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
             */
            public Builder mergePlayback(spotify.player.proto.transfer.PlaybackOuterClass.Playback value) {
                if (playbackBuilder_ == null) {
                    if (((bitField0_ & 0x00000002) == 0x00000002) &&
                            playback_ != null &&
                            playback_ != spotify.player.proto.transfer.PlaybackOuterClass.Playback.getDefaultInstance()) {
                        playback_ =
                                spotify.player.proto.transfer.PlaybackOuterClass.Playback.newBuilder(playback_).mergeFrom(value).buildPartial();
                    } else {
                        playback_ = value;
                    }
                    onChanged();
                } else {
                    playbackBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000002;
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
             */
            public Builder clearPlayback() {
                if (playbackBuilder_ == null) {
                    playback_ = null;
                    onChanged();
                } else {
                    playbackBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
             */
            public spotify.player.proto.transfer.PlaybackOuterClass.Playback.Builder getPlaybackBuilder() {
                bitField0_ |= 0x00000002;
                onChanged();
                return getPlaybackFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
             */
            public spotify.player.proto.transfer.PlaybackOuterClass.PlaybackOrBuilder getPlaybackOrBuilder() {
                if (playbackBuilder_ != null) {
                    return playbackBuilder_.getMessageOrBuilder();
                } else {
                    return playback_ == null ?
                            spotify.player.proto.transfer.PlaybackOuterClass.Playback.getDefaultInstance() : playback_;
                }
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Playback playback = 2;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    spotify.player.proto.transfer.PlaybackOuterClass.Playback, spotify.player.proto.transfer.PlaybackOuterClass.Playback.Builder, spotify.player.proto.transfer.PlaybackOuterClass.PlaybackOrBuilder>
            getPlaybackFieldBuilder() {
                if (playbackBuilder_ == null) {
                    playbackBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            spotify.player.proto.transfer.PlaybackOuterClass.Playback, spotify.player.proto.transfer.PlaybackOuterClass.Playback.Builder, spotify.player.proto.transfer.PlaybackOuterClass.PlaybackOrBuilder>(
                            getPlayback(),
                            getParentForChildren(),
                            isClean());
                    playback_ = null;
                }
                return playbackBuilder_;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
             */
            public boolean hasCurrentSession() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
             */
            public spotify.player.proto.transfer.SessionOuterClass.Session getCurrentSession() {
                if (currentSessionBuilder_ == null) {
                    return currentSession_ == null ? spotify.player.proto.transfer.SessionOuterClass.Session.getDefaultInstance() : currentSession_;
                } else {
                    return currentSessionBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
             */
            public Builder setCurrentSession(spotify.player.proto.transfer.SessionOuterClass.Session value) {
                if (currentSessionBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    currentSession_ = value;
                    onChanged();
                } else {
                    currentSessionBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
             */
            public Builder setCurrentSession(
                    spotify.player.proto.transfer.SessionOuterClass.Session.Builder builderForValue) {
                if (currentSessionBuilder_ == null) {
                    currentSession_ = builderForValue.build();
                    onChanged();
                } else {
                    currentSessionBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
             */
            public Builder mergeCurrentSession(spotify.player.proto.transfer.SessionOuterClass.Session value) {
                if (currentSessionBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004) &&
                            currentSession_ != null &&
                            currentSession_ != spotify.player.proto.transfer.SessionOuterClass.Session.getDefaultInstance()) {
                        currentSession_ =
                                spotify.player.proto.transfer.SessionOuterClass.Session.newBuilder(currentSession_).mergeFrom(value).buildPartial();
                    } else {
                        currentSession_ = value;
                    }
                    onChanged();
                } else {
                    currentSessionBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000004;
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
             */
            public Builder clearCurrentSession() {
                if (currentSessionBuilder_ == null) {
                    currentSession_ = null;
                    onChanged();
                } else {
                    currentSessionBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000004);
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
             */
            public spotify.player.proto.transfer.SessionOuterClass.Session.Builder getCurrentSessionBuilder() {
                bitField0_ |= 0x00000004;
                onChanged();
                return getCurrentSessionFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
             */
            public spotify.player.proto.transfer.SessionOuterClass.SessionOrBuilder getCurrentSessionOrBuilder() {
                if (currentSessionBuilder_ != null) {
                    return currentSessionBuilder_.getMessageOrBuilder();
                } else {
                    return currentSession_ == null ?
                            spotify.player.proto.transfer.SessionOuterClass.Session.getDefaultInstance() : currentSession_;
                }
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Session current_session = 3;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    spotify.player.proto.transfer.SessionOuterClass.Session, spotify.player.proto.transfer.SessionOuterClass.Session.Builder, spotify.player.proto.transfer.SessionOuterClass.SessionOrBuilder>
            getCurrentSessionFieldBuilder() {
                if (currentSessionBuilder_ == null) {
                    currentSessionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            spotify.player.proto.transfer.SessionOuterClass.Session, spotify.player.proto.transfer.SessionOuterClass.Session.Builder, spotify.player.proto.transfer.SessionOuterClass.SessionOrBuilder>(
                            getCurrentSession(),
                            getParentForChildren(),
                            isClean());
                    currentSession_ = null;
                }
                return currentSessionBuilder_;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
             */
            public boolean hasQueue() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
             */
            public spotify.player.proto.transfer.QueueOuterClass.Queue getQueue() {
                if (queueBuilder_ == null) {
                    return queue_ == null ? spotify.player.proto.transfer.QueueOuterClass.Queue.getDefaultInstance() : queue_;
                } else {
                    return queueBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
             */
            public Builder setQueue(spotify.player.proto.transfer.QueueOuterClass.Queue value) {
                if (queueBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    queue_ = value;
                    onChanged();
                } else {
                    queueBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
             */
            public Builder setQueue(
                    spotify.player.proto.transfer.QueueOuterClass.Queue.Builder builderForValue) {
                if (queueBuilder_ == null) {
                    queue_ = builderForValue.build();
                    onChanged();
                } else {
                    queueBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
             */
            public Builder mergeQueue(spotify.player.proto.transfer.QueueOuterClass.Queue value) {
                if (queueBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) == 0x00000008) &&
                            queue_ != null &&
                            queue_ != spotify.player.proto.transfer.QueueOuterClass.Queue.getDefaultInstance()) {
                        queue_ =
                                spotify.player.proto.transfer.QueueOuterClass.Queue.newBuilder(queue_).mergeFrom(value).buildPartial();
                    } else {
                        queue_ = value;
                    }
                    onChanged();
                } else {
                    queueBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
             */
            public Builder clearQueue() {
                if (queueBuilder_ == null) {
                    queue_ = null;
                    onChanged();
                } else {
                    queueBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
             */
            public spotify.player.proto.transfer.QueueOuterClass.Queue.Builder getQueueBuilder() {
                bitField0_ |= 0x00000008;
                onChanged();
                return getQueueFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
             */
            public spotify.player.proto.transfer.QueueOuterClass.QueueOrBuilder getQueueOrBuilder() {
                if (queueBuilder_ != null) {
                    return queueBuilder_.getMessageOrBuilder();
                } else {
                    return queue_ == null ?
                            spotify.player.proto.transfer.QueueOuterClass.Queue.getDefaultInstance() : queue_;
                }
            }

            /**
             * <code>optional .spotify.player.proto.transfer.Queue queue = 4;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    spotify.player.proto.transfer.QueueOuterClass.Queue, spotify.player.proto.transfer.QueueOuterClass.Queue.Builder, spotify.player.proto.transfer.QueueOuterClass.QueueOrBuilder>
            getQueueFieldBuilder() {
                if (queueBuilder_ == null) {
                    queueBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            spotify.player.proto.transfer.QueueOuterClass.Queue, spotify.player.proto.transfer.QueueOuterClass.Queue.Builder, spotify.player.proto.transfer.QueueOuterClass.QueueOrBuilder>(
                            getQueue(),
                            getParentForChildren(),
                            isClean());
                    queue_ = null;
                }
                return queueBuilder_;
            }

            /**
             * <code>optional int64 creation_timestamp = 5;</code>
             */
            public boolean hasCreationTimestamp() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional int64 creation_timestamp = 5;</code>
             */
            public long getCreationTimestamp() {
                return creationTimestamp_;
            }

            /**
             * <code>optional int64 creation_timestamp = 5;</code>
             */
            public Builder setCreationTimestamp(long value) {
                bitField0_ |= 0x00000010;
                creationTimestamp_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional int64 creation_timestamp = 5;</code>
             */
            public Builder clearCreationTimestamp() {
                bitField0_ = (bitField0_ & ~0x00000010);
                creationTimestamp_ = 0L;
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:spotify.player.proto.transfer.TransferState)
        }

    }

    // @@protoc_insertion_point(outer_class_scope)
}
